# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Edward West
# This file is distributed under the same license as the PyBroker package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyBroker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-05 11:51+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/reference/pybroker.data.rst:2 b9f32902b199484d8cf48234c7c302a9
msgid "pybroker.data module"
msgstr ""

#~ msgid "Contains :class:`.DataSource`\\ s used to fetch external data."
#~ msgstr ""

#~ msgid "Bases: :py:class:`~pybroker.data.DataSource`"
#~ msgstr ""

#~ msgid "Retrieves data from `AKShare <https://akshare.akfamily.xyz/>`_\\ ."
#~ msgstr ""

#~ msgid "Column name of adjusted close prices."
#~ msgstr ""

#~ msgid ""
#~ "Queries data from `AKShare "
#~ "<https://akshare.akfamily.xyz/>`_\\ . The timeframe"
#~ " of the data is limited to per"
#~ " day only."
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "Ticker symbols of the data to query."
#~ msgstr ""

#~ msgid "Start date of the data to query (inclusive)."
#~ msgstr ""

#~ msgid "End date of the data to query (inclusive)."
#~ msgstr ""

#~ msgid "The type of adjustment to make."
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid ":class:`pandas.DataFrame` containing the queried data."
#~ msgstr ""

#~ msgid "Retrieves stock data from `Alpaca <https://alpaca.markets/>`_."
#~ msgstr ""

#~ msgid ""
#~ "Queries data. Cached data is returned"
#~ " if caching is enabled by calling "
#~ ":meth:`pybroker.cache.enable_data_source_cache`."
#~ msgstr ""

#~ msgid "Symbols of the data to query."
#~ msgstr ""

#~ msgid ""
#~ "Formatted string that specifies the "
#~ "timeframe resolution to query. The "
#~ "timeframe string supports the following "
#~ "units:  - ``\"s\"``/``\"sec\"``: seconds - "
#~ "``\"m\"``/``\"min\"``: minutes - "
#~ "``\"h\"``/``\"hour\"``: hours - "
#~ "``\"d\"``/``\"day\"``: days - "
#~ "``\"w\"``/``\"week\"``: weeks - "
#~ "``\"mo\"``/``\"month\"``: months  An example "
#~ "timeframe string is ``1h 30m``."
#~ msgstr ""

#~ msgid ""
#~ "Formatted string that specifies the "
#~ "timeframe resolution to query. The "
#~ "timeframe string supports the following "
#~ "units:"
#~ msgstr ""

#~ msgid "``\"s\"``/``\"sec\"``: seconds"
#~ msgstr ""

#~ msgid "``\"m\"``/``\"min\"``: minutes"
#~ msgstr ""

#~ msgid "``\"h\"``/``\"hour\"``: hours"
#~ msgstr ""

#~ msgid "``\"d\"``/``\"day\"``: days"
#~ msgstr ""

#~ msgid "``\"w\"``/``\"week\"``: weeks"
#~ msgstr ""

#~ msgid "``\"mo\"``/``\"month\"``: months"
#~ msgstr ""

#~ msgid "An example timeframe string is ``1h 30m``."
#~ msgstr ""

#~ msgid "Retrieves crypto data from `Alpaca <https://alpaca.markets/>`_."
#~ msgstr ""

#~ msgid "Alpaca API key."
#~ msgstr ""

#~ msgid "Alpaca API secret."
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~abc.ABC`, "
#~ ":py:class:`~pybroker.data.DataSourceCacheMixin`"
#~ msgstr ""

#~ msgid ""
#~ "Base class for querying data from "
#~ "an external source. Extend this class"
#~ " and override :meth:`._fetch_data` to "
#~ "implement a custom :class:`.DataSource` that"
#~ " can be used with "
#~ ":class:`pybroker.strategy.Strategy`."
#~ msgstr ""

#~ msgid ""
#~ "Override this method to return data "
#~ "from a custom source. The returned "
#~ ":class:`pandas.DataFrame` must contain the "
#~ "following columns: ``symbol``, ``date``, "
#~ "``open``, ``high``, ``low``, and ``close``."
#~ msgstr ""

#~ msgid "Bases: :py:class:`object`"
#~ msgstr ""

#~ msgid ""
#~ "Mixin that implements fetching and "
#~ "storing cached :class:`.DataSource` data."
#~ msgstr ""

#~ msgid ""
#~ "Retrieves cached data from disk when "
#~ "caching is enabled with "
#~ ":meth:`pybroker.cache.enable_data_source_cache`."
#~ msgstr ""

#~ msgid ":class:`Iterable` of symbols for fetching cached data."
#~ msgstr ""

#~ msgid ""
#~ "Formatted string that specifies the "
#~ "timeframe resolution of the cached data."
#~ " The timeframe string supports the "
#~ "following units:  - ``\"s\"``/``\"sec\"``: "
#~ "seconds - ``\"m\"``/``\"min\"``: minutes - "
#~ "``\"h\"``/``\"hour\"``: hours - "
#~ "``\"d\"``/``\"day\"``: days - "
#~ "``\"w\"``/``\"week\"``: weeks - "
#~ "``\"mo\"``/``\"month\"``: months  An example "
#~ "timeframe string is ``1h 30m``."
#~ msgstr ""

#~ msgid ""
#~ "Formatted string that specifies the "
#~ "timeframe resolution of the cached data."
#~ " The timeframe string supports the "
#~ "following units:"
#~ msgstr ""

#~ msgid "Starting date of the cached data (inclusive)."
#~ msgstr ""

#~ msgid "Ending date of the cached data (inclusive)."
#~ msgstr ""

#~ msgid ""
#~ "``tuple[pandas.DataFrame, Iterable[str]]`` containing "
#~ "a :class:`pandas.DataFrame` with the cached"
#~ " data, and an ``Iterable[str]`` of "
#~ "symbols for which no cached data "
#~ "was found."
#~ msgstr ""

#~ msgid ""
#~ "Stores data to disk cache when "
#~ "caching is enabled with "
#~ ":meth:`pybroker.cache.enable_data_source_cache`."
#~ msgstr ""

#~ msgid ""
#~ "Formatted string that specifies the "
#~ "timeframe resolution of the data to "
#~ "cache. The timeframe string supports the"
#~ " following units:  - ``\"s\"``/``\"sec\"``: "
#~ "seconds - ``\"m\"``/``\"min\"``: minutes - "
#~ "``\"h\"``/``\"hour\"``: hours - "
#~ "``\"d\"``/``\"day\"``: days - "
#~ "``\"w\"``/``\"week\"``: weeks - "
#~ "``\"mo\"``/``\"month\"``: months  An example "
#~ "timeframe string would be ``1h 30m``."
#~ msgstr ""

#~ msgid ""
#~ "Formatted string that specifies the "
#~ "timeframe resolution of the data to "
#~ "cache. The timeframe string supports the"
#~ " following units:"
#~ msgstr ""

#~ msgid "An example timeframe string would be ``1h 30m``."
#~ msgstr ""

#~ msgid "Starting date of the data to cache (inclusive)."
#~ msgstr ""

#~ msgid "Ending date of the data to cache (inclusive)."
#~ msgstr ""

#~ msgid ":class:`pandas.DataFrame` containing the data to cache."
#~ msgstr ""

#~ msgid "Retrieves data from `Yahoo Finance <https://finance.yahoo.com/>`_\\ ."
#~ msgstr ""

#~ msgid "type"
#~ msgstr ""

#~ msgid "Final"
#~ msgstr ""

#~ msgid ""
#~ "Queries data from `Yahoo Finance "
#~ "<https://finance.yahoo.com/>`_\\ . The timeframe "
#~ "of the data is limited to per "
#~ "day only."
#~ msgstr ""

