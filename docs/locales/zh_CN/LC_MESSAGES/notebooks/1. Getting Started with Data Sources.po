# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Edward West
# This file is distributed under the same license as the PyBroker package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyBroker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 21:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/notebooks/1. 51ada97cc36940f3b0625a78c0d64046 Data Getting
#: Sources.ipynb:9 Started with
msgid "Getting Started with Data Sources"
msgstr "从数据源开始"

#: ../../source/notebooks/1. Data Getting Sources.ipynb:11 Started
#: f439c1f91f8c415396d4c5fbdc3951d2 with
msgid ""
"Welcome to **PyBroker**! The best place to start is to learn about "
"`DataSources "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.DataSource>`__."
" A ``DataSource`` is a class that can fetch data from external sources, "
"which you can then use to backtest your trading strategies."
msgstr ""
"欢迎来到 PyBroker！最好的起点是学习有关 DataSources 的知识。"
"DataSource 是一个可以从外部来源获取数据的类，您可以使用这些数据来回测您的交易策略。"

#: ../../source/notebooks/1. 0c831c98686448a3ba22bc72b3b89538 Data Getting
#: Sources.ipynb:14 Started with
msgid "Yahoo Finance"
msgstr "雅虎财经"

#: ../../source/notebooks/1. Data Getting Sources.ipynb:16 Started
#: ffac6030e77d460ea13e08878ac5ffd1 with
msgid ""
"One of the built-in ``DataSources`` in **PyBroker** is `Yahoo Finance "
"<https://finance.yahoo.com>`__. To use it, you can import `YFinance "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.YFinance>`__:"
msgstr ""
"PyBroker 内置的一个数据源是 `Yahoo Finance <https://finance.yahoo.com>`__。"
"要使用它，您可以导入 `YFinance "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.YFinance>`__："

#: ../../source/notebooks/1. Data Getting Sources.ipynb:344 Started
#: d9b81eb76ee448998df3c0a579be7564 with
msgid ""
"The above code queries data for AAPL and MSFT stocks, and returns a "
"`Pandas DataFrame "
"<https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html>`__ "
"with the results."
msgstr ""
"上述代码查询了 AAPL 和 MSFT 股票的数据，并返回一个包含结果的 `Pandas DataFrame "
"<https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html>`__。"

#: ../../source/notebooks/1. 5d28b7d7932746ae8f6f1d7151d5ca52 Data Getting
#: Sources.ipynb:347 Started with
msgid "Caching Data"
msgstr "缓存数据"

#: ../../source/notebooks/1. 6032d2e73c0c42fba95232a94053afe0 Data Getting
#: Sources.ipynb:349 Started with
msgid ""
"If you want to speed up your data retrieval, you can cache your queries "
"using **PyBroker**'s caching system. You can enable caching by calling "
"`pybroker.enable_data_source_cache('name') "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.enable_data_source_cache>`__"
" where ``name`` is the name of the cache you want to use:"
msgstr ""
"如果你想加快数据加载速度，可以使用 **PyBroker** 的缓存系统来缓存您的查询。"
"您可以通过调用 `pybroker.enable_data_source_cache('name') "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.enable_data_source_cache>`__ "
"来启用缓存，其中 ``name`` 是你想要使用的缓存名称："

#: ../../source/notebooks/1. 1d876469e440476dbf7c797ae07c301f Data Getting
#: Sources.ipynb:397 Started with
msgid ""
"The next call to `query "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.DataSource.query>`__"
" will cache the returned data to disk. Each unique combination of ticker "
"symbol and date range will be cached separately:"
msgstr ""
"下一次调用 `查询 "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.DataSource.query>`__ "
"时，将把返回的数据缓存到磁盘。每个唯一的股票代码和日期范围组合将被单独缓存："

#: ../../source/notebooks/1. 646bbb2256c14b2cab7926fca8ee3b62 Data Getting
#: Sources.ipynb:721 Started with
msgid ""
"Calling ``query`` again with the same ticker symbols and date range "
"returns the cached data:"
msgstr ""
"再次使用相同的股票代码和日期范围调用 ``查询`` 时，将返回缓存的数据："

#: ../../source/notebooks/1. Data Getting Sources.ipynb:1040 Started
#: b6b39199578d4f3db8b239b9d69186b2 with
msgid ""
"You can clear your cache using `pybroker.clear_data_source_cache "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.clear_data_source_cache>`__:"
msgstr ""
"您可以使用 `pybroker.clear_data_source_cache "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.clear_data_source_cache>`__ "
"清除缓存："

#: ../../source/notebooks/1. 0c624fe8bddf4b7aa0ae57321b28ef99 Data Getting
#: Sources.ipynb:1061 Started with
msgid ""
"Or disable caching altogether using `pybroker.disable_data_source_cache "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.disable_data_source_cache>`__:"
msgstr ""
"或者使用 `pybroker.disable_data_source_cache "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.disable_data_source_cache>`__ "
"完全禁用缓存："

#: ../../source/notebooks/1. Data Getting Sources.ipynb:1082 Started
#: db948f966b6c4a778e5fecfd36ee0dac with
msgid ""
"Note that these calls should be made after first calling "
"`pybroker.enable_data_source_cache "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.enable_data_source_cache>`__."
msgstr ""
"请注意，在调用这些方法之前，应先调用 `pybroker.enable_data_source_cache "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.enable_data_source_cache>`__"
"。"

#: ../../source/notebooks/1. 805fc5c858d049469dbba9f64611c20f Data Getting
#: Sources.ipynb:1094 Started with
msgid "Alpaca"
msgstr ""

#: ../../source/notebooks/1. 5aea2c542c894096bdc5b6a75c6ec1d7 Data Getting
#: Sources.ipynb:1096 Started with
msgid ""
"**PyBroker** also includes an `Alpaca <https://alpaca.markets/>`__ "
"``DataSource`` for fetching stock data. To use it, you can import `Alpaca"
" "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.Alpaca>`__"
" and provide your API key and secret:"
msgstr ""

#: ../../source/notebooks/1. Data Getting Sources.ipynb:1120 Started
#: b5d18e1b65584b448a44741a04c41c55 with
msgid ""
"You can query ``Alpaca`` for stock data using the same syntax as with "
"Yahoo Finance, but Alpaca also supports querying data by different "
"timeframes. For example, to query 1 minute data:"
msgstr ""

#: ../../source/notebooks/1. 2381d909d2ee4401941d882329750dc6 Data Getting
#: Sources.ipynb:1448 Started with
msgid "Alpaca Crypto"
msgstr ""

#: ../../source/notebooks/1. 1d53b4cf682a45e989390767fa762f4e Data Getting
#: Sources.ipynb:1450 Started with
msgid ""
"If you are interested in fetching cryptocurrency data, you can use "
"`AlpacaCrypto "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.AlpacaCrypto>`__."
" Here's an example of how to use it:"
msgstr ""

#: ../../source/notebooks/1. 429abc1973f44e4380c3788f93e73dee Data Getting
#: Sources.ipynb:1790 Started with
msgid ""
"In the above example, we're querying for hourly data for the BTC/USD "
"currency pair."
msgstr ""

#: ../../source/notebooks/1. 1b5d6f90ea8b4d9a850cb2d2f2d173b2 Data Getting
#: Sources.ipynb:1802 Started with
msgid "AKShare"
msgstr ""

#: ../../source/notebooks/1. 80cf312015d142dbb4cdfb34dd88919c Data Getting
#: Sources.ipynb:1804 Started with
msgid ""
"**PyBroker** also includes an `AKShare "
"<https://github.com/akfamily/akshare>`__ ``DataSource`` for fetching "
"**Chinese** stock data. AKShare, a widely-used open-source package, is "
"tailored for obtaining financial data, with a focus on the Chinese "
"market. This free tool provides users with access to higher quality data "
"compared to yfinance for the Chinese market. To use it, you can import "
"`AKShare "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.AKShare>`__:"
msgstr ""

#: ../../source/notebooks/1. Data Getting Sources.ipynb:2091 Started
#: f2e645e4845a44c9a1a3497643acf955 with
msgid ""
"`In the next notebook, we'll take a look at how to use DataSources to "
"backtest a simple trading strategy "
"<https://www.pybroker.com/en/latest/notebooks/2.%20Backtesting%20a%20Strategy.html>`__."
msgstr ""

#~ msgid ""
#~ "If you want to speed up your "
#~ "data retrieval, you can cache your "
#~ "queries using **PyBroker**'s caching system."
#~ " You can enable caching by calling"
#~ " `pybroker.enable_data_source_cache('name') "
#~ "<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.enable_data_source_cache>`__"
#~ " where ``name`` is the name of "
#~ "the cache you want to use:"
#~ msgstr ""

#~ msgid ""
#~ "If you are interested in fetching "
#~ "cryptocurrency data, you can use "
#~ "`AlpacaCrypto "
#~ "<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.AlpacaCrypto>`__."
#~ " Here's an example of how to "
#~ "use it:"
#~ msgstr ""

#~ msgid ""
#~ "In the above example, we're querying "
#~ "for hourly data for the BTC/USD "
#~ "currency pair."
#~ msgstr ""

#~ msgid ""
#~ "`In the next notebook, we'll take "
#~ "a look at how to use DataSources"
#~ " to backtest a simple trading "
#~ "strategy "
#~ "<https://www.pybroker.com/en/latest/notebooks/2.%20Backtesting%20a%20Strategy.html>`__."
#~ msgstr ""

#~ msgid ""
#~ "If you want to speed up your "
#~ "data retrieval, you can cache your "
#~ "queries using **PyBroker**\\ ’s caching "
#~ "system. You can enable caching by "
#~ "calling `pybroker.enable_data_source_cache(‘name’) "
#~ "<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.enable_data_source_cache>`__"
#~ " where ``name`` is the name of "
#~ "the cache you want to use:"
#~ msgstr ""

#~ msgid ""
#~ "If you are interested in fetching "
#~ "cryptocurrency data, you can use "
#~ "`AlpacaCrypto "
#~ "<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.AlpacaCrypto>`__."
#~ " Here’s an example of how to "
#~ "use it:"
#~ msgstr ""

#~ msgid ""
#~ "In the above example, we’re querying "
#~ "for hourly data for the BTC/USD "
#~ "currency pair."
#~ msgstr ""

#~ msgid ""
#~ "`In the next notebook, we’ll take "
#~ "a look at how to use DataSources"
#~ " to backtest a simple trading "
#~ "strategy "
#~ "<https://www.pybroker.com/en/latest/notebooks/2.%20Backtesting%20a%20Strategy.html>`__."
#~ msgstr ""

